<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAQCwsLRAoKCk8HBwcmAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEMDAyCCQkJqwoKCvoJCQn6CgoKlwsL
        C7wKCgoaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKCgqCCgoKtg0NDSgNDQ1PCwsLWwoK
        ChoJCQmpCgoKsRISEg4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJCQkeCgoKlA8PDxEKCgqvCgoKlwoK
        CpMLCwuqCgoKGQkJCTYKCgp9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMbAoKCkkAAAAAAAAAAAsL
        CxgNDQ0TAAAAAAAAAAAAAAAACgoKsgwMDCwUFBQNAAAAAAAAAAAAAAAACAgIIAsLC7sQEBAfDAwMFggI
        CCAAAAAAAAAAAAAAAAwMDAwqAAAAAAkJCZULCwu4CgoKkgsLC6gMDAwVAAAAAAkJCVYKCgpLDAwMLAoK
        CvUKCgr+CwsLXw0NDRMKCgrnCgoK/wkJCYcAAAAACQkJogAAAAAJCQluCwsLRQAAAAAKCgoaCQkJ1woK
        CoAKCgr/CgoK/woKCtUKCgqSCgoK/woKCv8KCgrRCwsLqgoKCoMLCwtHCgoKngAAAAIAAAAAAAAAAAsL
        C+oICAhACwsLRAkJCVMJCQlVCQkJVQkJCVUKCgpJBwcHJAoKCtQKCgqXCgoKmgAAAAUAAAAAAAAAAAAA
        AAwKCgrpCgoKswsLC6oLCwuqCwsLqgsLC6oLCwuqCwsLqgsLC6oJCQnXCgoKnwAAAAAAAAAAAAAAAAAA
        AAAAAAAACwsLqQwMDCoLCwunCwsLqgsLC6oKCgp/AAAAAAAAAAAAAAAACgoKTgsLC1sAAAAAAAAAAAAA
        AAAAAAAAAAAAAAsLC6kJCQlYCgoKmQsLC3cLCwt3CgoKtgAAAAAAAAAAAAAAAAoKCmsICAg/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAJCQmkAAAACQcHByMKCgozCgoKMwAAAAsAAAAAAAAAAAAAAAAKCgqXDAwMFQAA
        AAAAAAAAAAAAAAAAAAAAAAAACQkJVQsLC3YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBwcjCwsLqAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKCgqBCgoKngkJCVgLCwtECwsLRAoKCkoKCgp7CgoKsgoK
        ChkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsLCxgJCQlRCgoKZgoKCmYLCwtgCwsLMAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAP//AADwPwAA558AAOh/AAD/7wAA3+EAAPMXAADABQAA3+MAAMAH
        AADR/wAA1v8AAN/vAAD/7wAA598AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAwM
        DEEJCQmRCQkJqAoKCrAJCQmlCgoKfwsLCzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkJ
        CVELCwvaCgoK/goKCv8KCgr/CgoK/woKCv8LCwvuCgoK/wsLC8EKCgo0AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAgKCgqeCgoK+woKCpQMDAwsCgoK6AoKCv0KCgr+CgoK9w0NDSgLCwswCgoK1QoKCv0JCQlyAAAAAAAA
        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
        Cu8KCgrGDAwMFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALCwugCgoK/wwMDHwPDw8RDw8PEQ8P
        DxEPDw8RDw8PEQ8PDxEPDw8RDw8PEQ8PDxEPDw8RDw8PEQ8PDxEPDw8RDw8PEQ8PDxEKCgqrCgoK/wsL
        C78KCgr7CwsLqAAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQkJHgoKCv0KCgr/CgoK/woK
        Cv8KCgr/CgoK/woKCv8KCgr/CgoK/woKCv8KCgr/CgoK/woKCv8KCgr/CgoK/woKCv8KCgr/CgoK/woK
        Cv8KCgr/CgoK+QsLC3QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwVCgoK/wwM
        DIALCwtHCwsLRAsLC0QLCwtECwsLRAsLC0QLCwtECwsLRAsLC0QLCwtECwsLRAsLC0QLCwtECwsLRAsL
        C0QLCwtECgoKTAoKCqAKCgrgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEKCgr3CwsLWgAAAAAAAAALCQkJbwkJCYgJCQmICQkJiAkJCYgJCQmICQkJchQUFA0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAACwsLjgoKCsQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAoKCtwLCwt3AAAAAAoKCrUKCgrrCgoKzAoKCswKCgrMCgoKzAoKCswKCgrqCQkJvQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKCgqrCwsLqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAACQkJvwoKCpMAAAAACgoK7QkJCXAAAAAAAAAAAAAAAAAAAAAAAAAAAAoK
        CmgKCgr2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoKCscJCQmLAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJCQmiCgoKsAAAAAALCwuRCgoK/goKCu4KCgruCgoK7goK
        Cu4KCgruCgoK/goKCpkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgoK5AkJCW8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoKCoEKCgrTAAAAAAAAAAAJCQk8CgoKZgoK
        CmYKCgpmCgoKZgoKCmYICAg/AAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsKCgr9CgoKTgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgoKUAoKCvsNDQ0UAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwsLRgoK
        Cv8JCQkbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJCgoK7QoK
        Cn8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAKCgq1CwsLwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAJCQluCgoK9wgICD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAACQkJbgoKCv0JCQk7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIJCQmlCgoK9wkJCXIAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAADQ0NEwoKCpQKCgr+CQkJcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMKCgp8CgoK9AoKCu0KCgqzCwsLkAkJCYgJCQmICQkJiAkJ
        CYgJCQmICgoKlgkJCb0KCgr2CgoK5wkJCVYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANDQ0UCgoKawsLC6oKCgrECgoKzAoK
        CswKCgrMCgoKzAoKCswLCwvACgoKoQsLC1oAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////8P///8Af//8Qz//+Ocf//p/b//3POf/94H3/+f/9//n/
        /P/z//wH5///c+cPBznmBwc79gYCc/IAAGfzAARP8//8H/AAAH/z//5/94P+f/YA/n/y/v5/8gD+//P/
        /v/7//7/+//8//3//f/8//P//wAH///AH///////
</value>
  </data>
</root>